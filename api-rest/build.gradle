apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: "jacoco"

dependencies {
    // Module dependencies
    compile project(':app-core')
    compile project(':persistance-db-mongo')

    // Non module dependencies
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
    compile 'org.apache.commons:commons-csv'

    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = project.hasProperty('publishDocker')
    applicationName = 'testra-api'
    tagVersion = "$project.version"
    tag = "testra/$applicationName"
    dockerfile = file('build/resources/main/Dockerfile')
    maintainer = 'Testra <testra2018@gmail.com>'
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}