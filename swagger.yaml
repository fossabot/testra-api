swagger: '2.0'
info:
  version: '1.0-SNAPSHOT'
  title: "Testra API"
  description: API for Testra
  license:
    name: GNU GPLv3
    url: https://github.com/testra-tech/testra-api/blob/master/LICENSE
host: testra-api.herokuapp.com
basePath: /api/v1/
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /projects:
    x-summary: Projects Collection
    get:
      summary: List All Projects
      description: |
        Returns list of all projects available
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
          examples:
            application/json:
              - id: 5ae7ea5fb969e16b0e4cfb41
                name: Test Project

    post:
      description: >-
        Adds a new project into Testra app. It takes a JSON
        object containing a name that was not used before.
      summary: Create a New Project
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectRequest'
      responses:
        201:
          description: 'Successful creation of Project'
          schema:
            $ref: '#/definitions/Project'
          examples:
            application/json:
              - id: 5ae7ea5fb969e16b0e4cfb41
                name: Test Project
    put:
      description: |
        Updates exiting project using project id
      summary: Update project info
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectRequest'
      responses:
        200:
          description: 'Successful update of given Project'
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
          examples:
            application/json:
              - id: 5ae7ea5fb969e16b0e4cfb41
                name: Test Project

  /projects/{id}:
    get:
      summary: Get project by id
      description: Returns single project info for the given id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: Project Id
      responses:
        200:
          description: 'Successful update of given Project'
          schema:
            $ref: '#/definitions/Project'
          examples:
            application/json:
              - id: 5ae7ea5fb969e16b0e4cfb41
                name: Test Project

definitions:
  Project:
    title: Project
    type: object
    properties:
      id:
        type: string
      name:
        type: string
    required:
      - id
      - name

  ProjectRequest:
    title: Project Request
    type: object
    properties:
      name:
        type: string
    required:
      - name
    example:
      name: Test Project

  Scenario:
    title: Scenario
    type: object
    properties:
      id:
        type: string
      projectId:
        type: string
      featureId:
        type: string
      name:
        type: string
      before:
        type: array
        items:
          $ref: '#/definitions/TestStep'
      after:
        type: array
        items:
          $ref: '#/definitions/TestStep'
      backgroundSteps:
        type: array
        items:
          $ref: '#/definitions/TestStep'
      steps:
        type: array
        items:
          $ref: '#/definitions/TestStep'

  ScenarioRequest:
    title: Scenario Request
    type: object
    properties:
      name:
        type: string
      featureName:
        type: string
      before:
        type: array
        items:
          $ref: '#/definitions/TestStep'
      after:
        type: array
        items:
          $ref: '#/definitions/TestStep'
      backgroundSteps:
        type: array
        items:
          $ref: '#/definitions/TestStep'
      steps:
        type: array
        items:
          $ref: '#/definitions/TestStep'

  TestStep:
    title: TestStep
    type: object
    properties:
      index:
        type: integer
      text:
        type: string

  TestCase:
    title: TestCase
    type: object
    properties:
      id:
        type: string
      projectId:
        type: string
      name:
        type: string
      namespaceId:
        type: string

  TestCaseRequest:
    title: TestCaseRequest
    type: object
    properties:
      name:
        type: string
      namespace:
        type: string

  TestExecution:
    title: TestExecution
    type: object
    properties:
      id:
        type: string
      projectId:
        type: string
      startTime:
        type: integer
      endTime:
        type: integer
      host:
        type: string
      isParallel:
        type: boolean
      testCases:
        type: array
        items:
          type: string
      testScenarios:
        type: array
        items:
          type: string

  TestExecutionRequest:
    title: TestExecutionRequest
    type: object
    properties:
      isParallel:
        type: boolean

  TestResult:
    title: TestResult
    type: object
    properties:
      id:
        type: string
      projectId:
        type: string
      executionId:
        type: string
      targetId:
        type: string
      resultType:
        type: string
      result:
        type: string
      error:
        type: string
      durationInMs:
        type: integer
      startTime:
        type: integer
      endTime:
        type: integer
      retryCount:
        type: integer
      attachments:
        type: array
        items:
          type: string

  TestResultRequest:
    title: TestResultRequest
    type: object
    properties:
      targetId:
        type: string
      resultType:
        type: string
      result:
        type: string
      error:
        type: string
      durationInMs:
        type: integer
      startTime:
        type: integer
      endTime:
        type: integer
      retryCount:
        type: integer
      attachments:
        type: array
        items:
          type: string